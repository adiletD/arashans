{"ast":null,"code":"export const productListReducer = (state = {\n  products: []\n}, action) => {\n  // this proudcts: [] gonna be shown in the browser\n  //we gonna evaulate the type of action, may contain a payload\n  switch (action.type) {\n    //prod liust req\n    case 'PRODUCT_LIST_REQUEST':\n      return {\n        loading: true,\n        products: []\n      };\n    //loading, when req, we want the componenet to know that it is loading\n\n    case 'PRODUCT_LIST_SUCCESS':\n      return {\n        loading: false,\n        products: action.payload\n      };\n    // loading is already done since we have the list of products\n    // products are filled with the payload\n\n    case 'PRODUCT_LIST_FAIL':\n      //404 or smth like that\n      return {\n        laoding: false,\n        error: action.payload\n      };\n    //we send error in the payload\n\n    default:\n      return state;\n  }\n}; //to use th reducer we have to import it to store js","map":{"version":3,"sources":["/Users/adilet/Documents/Projects/arashanscom/frontend/src/reducers/productReducers.js"],"names":["productListReducer","state","products","action","type","loading","payload","laoding","error"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AACtE;AACA;AACA,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,sBAAL;AACE,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBH,QAAAA,QAAQ,EAAE;AAA3B,OAAP;AAAuC;;AACzC,SAAK,sBAAL;AACE,aAAO;AAAEG,QAAAA,OAAO,EAAE,KAAX;AAAkBH,QAAAA,QAAQ,EAAEC,MAAM,CAACG;AAAnC,OAAP;AAAoD;AACtD;;AACA,SAAK,mBAAL;AAA0B;AACxB,aAAO;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEL,MAAM,CAACG;AAAhC,OAAP;AAAiD;;AAEnD;AACE,aAAOL,KAAP;AAXJ;AAaD,CAhBM,C,CAkBP","sourcesContent":["export const productListReducer = (state = { products: [] }, action) => {\n  // this proudcts: [] gonna be shown in the browser\n  //we gonna evaulate the type of action, may contain a payload\n  switch (action.type) {\n    //prod liust req\n    case 'PRODUCT_LIST_REQUEST':\n      return { loading: true, products: [] } //loading, when req, we want the componenet to know that it is loading\n    case 'PRODUCT_LIST_SUCCESS':\n      return { loading: false, products: action.payload } // loading is already done since we have the list of products\n    // products are filled with the payload\n    case 'PRODUCT_LIST_FAIL': //404 or smth like that\n      return { laoding: false, error: action.payload } //we send error in the payload\n\n    default:\n      return state\n  }\n}\n\n//to use th reducer we have to import it to store js\n"]},"metadata":{},"sourceType":"module"}